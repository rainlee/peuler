/*
                   _ooOoo_
                  o8888888o
                  88" . "88
                  (| -_- |)
                  O\  =  /O
               ____/`---'\____
             .'  \\|     |//  `.
            /  \\|||  :  |||//  \
           /  _||||| -:- |||||-  \
           |   | \\\  -  /// |   |
           | \_|  ''\---/''  |   |
           \  .-\__  `-`  ___/-. /
         ___`. .'  /--.--\  `. . __
      ."" '<  `.___\_<|>_/___.'  >'"".
     | | :  `- \`.;`\ _ /`;.`/ - ` : | |
     \  \ `-.   \_ __\ /__ _/   .-` /  /
======`-.____`-.___\_____/___.-`____.-'======
                   `=---='
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
         God Bless Me     BUG Free Forever
*/
// answer is 232792560
#include <iostream>
using namespace std;

// 即求1-20的最小公倍数
// 以下解法只适用于1-20，不能扩展到1-30……
// 推导可得如果可以被11-20整除，那么一定可以被1-10整除，那么就可以将数的范围缩小一半。
bool evenDiv(int n)
{
    for (int i = 11; i <= 20; ++i)
        if (n % i)
            return false;
    return true;
}
int smallestMultiple()
{
    for (int i = 2521; ; ++i)  // [1,10] 最小公倍数 2520
        if (evenDiv(i))
            return i;
}

int main()
{
    cout << smallestMultiple() << endl;
    return 0;
}
